[{"/Users/seonashim/Sparta/react_middleage/image-community/src/components/Post.js":"1","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/PostList.js":"2","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/App.js":"3","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/Login.js":"4","/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Input.js":"5","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/Signup.js":"6","/Users/seonashim/Sparta/react_middleage/image-community/src/elements/index.js":"7","/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Text.js":"8","/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Button.js":"9","/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Image.js":"10","/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Grid.js":"11","/Users/seonashim/Sparta/react_middleage/image-community/src/index.js":"12","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Cookie.js":"13","/Users/seonashim/Sparta/react_middleage/image-community/src/redux/modules/user.js":"14","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/firebase.js":"15","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Permit.js":"16","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/PostWrite.js":"17","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/PostDetail.js":"18","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/common.js":"19","/Users/seonashim/Sparta/react_middleage/image-community/src/components/CommentWrite.js":"20","/Users/seonashim/Sparta/react_middleage/image-community/src/components/CommentList.js":"21","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Upload.js":"22","/Users/seonashim/Sparta/react_middleage/image-community/src/components/Header.js":"23","/Users/seonashim/Sparta/react_middleage/image-community/src/redux/configureStore.js":"24","/Users/seonashim/Sparta/react_middleage/image-community/src/redux/modules/post.js":"25","/Users/seonashim/Sparta/react_middleage/image-community/src/redux/modules/image.js":"26","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Search.js":"27","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/Notifications.js":"28","/Users/seonashim/Sparta/react_middleage/image-community/src/components/Card.js":"29"},{"size":1418,"mtime":1633472603823,"results":"30","hashOfConfig":"31"},{"size":1378,"mtime":1633467972666,"results":"32","hashOfConfig":"31"},{"size":1873,"mtime":1633569974512,"results":"33","hashOfConfig":"31"},{"size":1800,"mtime":1633876754925,"results":"34","hashOfConfig":"31"},{"size":1427,"mtime":1633876819080,"results":"35","hashOfConfig":"31"},{"size":2362,"mtime":1633357700252,"results":"36","hashOfConfig":"31"},{"size":185,"mtime":1633357699284,"results":"37","hashOfConfig":"31"},{"size":708,"mtime":1633459008311,"results":"38","hashOfConfig":"31"},{"size":1267,"mtime":1633357699284,"results":"39","hashOfConfig":"31"},{"size":1627,"mtime":1633463133509,"results":"40","hashOfConfig":"31"},{"size":1159,"mtime":1633458142457,"results":"41","hashOfConfig":"31"},{"size":284,"mtime":1633358771980,"results":"42","hashOfConfig":"31"},{"size":605,"mtime":1633358795074,"results":"43","hashOfConfig":"31"},{"size":3472,"mtime":1633358740671,"results":"44","hashOfConfig":"31"},{"size":718,"mtime":1633399379795,"results":"45","hashOfConfig":"31"},{"size":484,"mtime":1633394536082,"results":"46","hashOfConfig":"31"},{"size":3131,"mtime":1633473362601,"results":"47","hashOfConfig":"31"},{"size":383,"mtime":1633357700252,"results":"48","hashOfConfig":"31"},{"size":159,"mtime":1633358795040,"results":"49","hashOfConfig":"31"},{"size":407,"mtime":1633357659745,"results":"50","hashOfConfig":"31"},{"size":1068,"mtime":1633357659745,"results":"51","hashOfConfig":"31"},{"size":1975,"mtime":1633469219425,"results":"52","hashOfConfig":"31"},{"size":1935,"mtime":1633460926096,"results":"53","hashOfConfig":"31"},{"size":1316,"mtime":1633402718335,"results":"54","hashOfConfig":"31"},{"size":11734,"mtime":1633621409104,"results":"55","hashOfConfig":"31"},{"size":1741,"mtime":1633423730350,"results":"56","hashOfConfig":"31"},{"size":862,"mtime":1633496700889,"results":"57","hashOfConfig":"31"},{"size":1341,"mtime":1633467217168,"results":"58","hashOfConfig":"31"},{"size":999,"mtime":1633463065124,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"n1hfil",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"63"},"/Users/seonashim/Sparta/react_middleage/image-community/src/components/Post.js",["129"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\n\nimport {Grid, Image, Text, Button} from \"../elements\";\n\n\n\nconst Post = (props) => {\n\n    return (\n      <React.Fragment>\n        <Grid>\n          <Grid is_flex padding=\"16px\">\n            <Grid is_flex width=\"auto\">\n              <Image shape=\"circle\" src={props.src} />\n              <Text bold>{props.user_info.user_name}</Text>\n            </Grid>\n            <Grid is_flex width=\"auto\">\n              <Text width=\"max-content\">{props.insert_dt}</Text>\n              {props.is_me && <Button text=\"수정\" _onClick={()=>{history.push(`/write/${props.id}`);}}/>}\n            </Grid>\n          </Grid>\n          <Grid padding=\"16px\">\n            <Text>{props.contents}</Text>\n          </Grid>\n          <Grid>\n            <Image shape=\"rectangle\" src={props.image_url} />\n          </Grid>\n          <Grid padding=\"16px\">\n            <Text margin=\"0px\" bold>댓글 {props.comment_cnt}개</Text>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n}\n\nPost.defaultProps = {\n  user_info: {\n    user_name: \"mean0\",\n    user_profile: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  },\n  image_url: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  contents: \"고양이네요!\",\n  comment_cnt: 10,\n  insert_dt: \"2021-02-27 10:00:00\",\n};\n\nexport default Post;",["130","131"],"/Users/seonashim/Sparta/react_middleage/image-community/src/pages/PostList.js",["132"],"// PostList.js\nimport React from \"react\";\nimport { useSelector , useDispatch} from \"react-redux\";\nimport {actionCreators as postActions} from \"../redux/modules/post\"\nimport Post from \"../components/Post\";\n\nconst PostList = (props) => {\n    //포스트 정보 가져오기\n    const post_list = useSelector((state)=>state.post.list);\n    //지금 로그인한 유저 정보 가져오기\n    const user_info = useSelector((state)=>state.user.user);\n    const dispatch = useDispatch();\n    \n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(()=>{\n        if (post_list.length === 0){\n            dispatch(postActions.getPostFB());\n        }\n        \n    },[]); //[]빈 배열이 들어가면 처음 한번만 반응한다!\n    \n    return (\n        <React.Fragment>\n            {/* <Post/> */}\n            {/* post는 post_list의 내용물! 한덩어리씩 가져온당 */}\n            {post_list.map((post, index)=>{\n                //포스트한 유저의 아이디와 로그인한 유저의 uid가 같을 때\n                if(user_info && post.user_info.user_id === user_info.uid){\n                    return <Post key={post.id} {...post} is_me/>;\n                }else{\n                    return <Post key={post.id} {...post}/>;\n                }\n                \n            })}\n        </React.Fragment>\n    )\n}\n\nexport default PostList;\n\n","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/App.js",["133"],"/Users/seonashim/Sparta/react_middleage/image-community/src/pages/Login.js",["134","135","136"],"/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Input.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/pages/Signup.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/elements/index.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Text.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Button.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Image.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/elements/Grid.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/index.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Cookie.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/redux/modules/user.js",["137"],"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\n\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\";\n\n// actions\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n// initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\n// middleware actions\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, { history }) {\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) => {\n      auth\n        .signInWithEmailAndPassword(id, pwd)\n        .then((user) => {\n          console.log(user);\n\n          dispatch(\n            setUser({\n              user_name: user.user.displayName,\n              id: id,\n              user_profile: \"\",\n              uid: user.user.uid,\n            })\n          );\n\n          history.push(\"/\");\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n\n          console.log(errorCode, errorMessage);\n        });\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, { history }) {\n    auth\n      .createUserWithEmailAndPassword(id, pwd)\n      .then((user) => {\n        console.log(user);\n\n        auth.currentUser\n          .updateProfile({\n            displayName: user_name,\n          })\n          .then(() => {\n            dispatch(\n              setUser({\n                user_name: user_name,\n                id: id,\n                user_profile: \"\",\n                uid: user.user.uid,\n              })\n            );\n            history.push(\"/\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n\n        // Signed in\n        // ...\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        console.log(errorCode, errorMessage);\n        // ..\n      });\n  };\n};\n\nconst loginCheckFB = () => {\n  return function (dispatch, getState, {history}){\n    auth.onAuthStateChanged((user) => {\n      if(user){\n        dispatch(\n          setUser({\n            user_name: user.displayName,\n            user_profile: \"\",\n            id: user.email,\n            uid: user.uid,\n          })\n        );\n      }else{\n        dispatch(logOut());\n      }\n    })\n  }\n}\n\nconst logoutFB = () => {\n  return function (dispatch, getState, {history}) {\n    auth.signOut().then(() => {\n      dispatch(logOut());\n      history.replace('/');\n    })\n  }\n}\n\n// reducer\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n      }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logoutFB,\n};\n\nexport { actionCreators };","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/firebase.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Permit.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/pages/PostWrite.js",["138","139"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as PostActions} from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\n\nimport {Grid, Text, Button, Image, Input} from \"../elements\";\nimport Upload from \"../shared/Upload\";\n\nconst PostWrite = (props) => {\n    const dispatch = useDispatch();\n    const is_login = useSelector((state)=>state.user.is_login);\n    const preview = useSelector((state)=>state.image.preview);\n    \n    const {history} = props;\n\n    \n\n    const getPostContents = (e)=>{\n        setContents(e.target.value);\n    }\n\n    const addPost = () => {\n       dispatch(PostActions.addPostFB(contents));\n    };\n\n   \n\n\n    const post_list = useSelector((state)=>state.post.list);\n\n    //수정할 게시글의 아이디 \n    const post_id = props.match.params.id;\n\n    const editPost = () => {\n      dispatch(PostActions.editPostFB(post_id,{contents:contents}));\n    };\n\n    //수정페이지인지 아닌지 확인하기\n    const is_edit = post_id?true:false;\n\n    //수정페이지일때 post모듈의 list에서 post_id와 같은 덩어리만 찾아낸다.\n    let _post = is_edit? post_list.find((p)=>p.id === post_id):null;\n\n    const [contents, setContents] = React.useState(_post?_post.contents:\"\");\n\n    React.useEffect(()=>{\n      //수정창에서 새로고침해서 리덕스 날라가서 포스트 정보가 없을 때\n      if(is_edit && !_post){\n        window.alert('포스트 정보가 없음!');\n        history.goBack();\n        return;\n      }\n\n      //수정창일때 리덕스의 프리뷰 변경\n      if(is_edit){\n        dispatch(imageActions.setPreview(_post.image_url))\n      }\n    },[]);\n\n    //로그인 상태가 아닌 경우\n    if(!is_login){\n      return (\n        <Grid>\n          <Text bold size=\"32px\">앗 잠깐!</Text>\n          <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n          {/* replace는 push랑 다르게 '갈아끼운다'는 개념! */}\n          <Button text=\"로그인 하러가기\" _onClick={()=>{history.replace('/login')}}/>\n        </Grid>\n      )\n    }\n\n      return(\n        <React.Fragment>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"36px\" bold>\n            {is_edit ? '게시글 수정' : '게시글 작성'}\n          </Text>\n          <Upload />\n        </Grid>\n\n        <Grid>\n          <Grid padding=\"16px\">\n            <Text margin=\"0px\" size=\"24px\" bold>\n              미리보기\n            </Text>\n          </Grid>\n\n          <Image shape=\"rectangle\" src={preview? preview:\"http://placehold.it/400x300\"} />\n        </Grid>\n\n        <Grid padding=\"16px\">\n          <Input label=\"게시글 내용\" placeholder=\"게시글 작성\" multiLine _onChange={getPostContents} value={contents}/>\n        </Grid>\n\n        <Grid padding=\"16px\">\n          {is_edit ? \n          (<Button text=\"게시글 수정\" _onClick={editPost}></Button>) \n          :(<Button text=\"게시글 작성\" _onClick={addPost}></Button>)}\n        </Grid>\n      </React.Fragment>\n      )\n}\n\nexport default PostWrite;","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/PostDetail.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/shared/common.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/components/CommentWrite.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/components/CommentList.js",["140","141","142"],"import React from \"react\";\nimport {Grid, Image, Text} from \"../elements\";\n\nconst CommentList = () => {\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <CommentItem />\n        <CommentItem />\n        <CommentItem />\n        <CommentItem />\n        <CommentItem />\n        <CommentItem />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CommentList;\n\n\nconst CommentItem = (props) => {\n\n    const {user_profile, user_name, user_id, post_id, contents, insert_dt} = props;\n    return (\n        <Grid is_flex>\n            <Grid is_flex width=\"auto\">\n                <Image shape=\"circle\"/>\n                <Text bold>{user_name}</Text>\n            </Grid>\n            <Grid is_flex margin=\"0px 4px\">\n                <Text margin=\"0px\">{contents}</Text>\n                <Text margin=\"0px\">{insert_dt}</Text>\n            </Grid>\n        </Grid>\n    )\n}\n\nCommentItem.defaultProps = {\n    user_profile: \"\",\n    user_name: \"mean0\",\n    user_id: \"\",\n    post_id: 1,\n    contents: \"귀여운 고양이네요!\",\n    insert_dt: '2021-01-01 19:00:00'\n}","/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Upload.js",["143","144","145"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Grid , Button} from \"../elements\";\nimport { storage } from \"./firebase\";\n\nimport { actionCreators as uploadImage } from \"../redux/modules/image\";\n\nconst Upload = (props) => {\n    const [file, setFile] = React.useState('이미지를 선택해주세요');\n    const fileInput = React.useRef();\n    const dispatch = useDispatch();\n\n    const is_uploading = useSelector(state=>state.image.uploading);\n\n    const selectFile = (e) => {\n        if (e.target.files.length !== 0){setFile(e.target.files[0].name);};\n       \n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        //파일을 읽고 읽기가 끝났을 시 행동을 실행!\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            dispatch(uploadImage.setPreview(reader.result));\n        }\n    }\n    const uploadFb = () => {\n        let image = fileInput.current.files[0];\n        dispatch(uploadImage.uploadImageFB(image));\n      \n        \n       \n    }\n    return (\n        <React.Fragment>\n            <Grid>\n            <FileInput htmlFor=\"input_file\">\n                    <p>{file}</p>\n                    <p>이미지 선택</p>\n                </FileInput>\n                <input type=\"file\" id=\"input_file\" style={{display:\"none\"}} onChange={selectFile} ref={fileInput} disabled={is_uploading}/>\n            </Grid>\n            {/* <Button text=\"업로드하기\" _onClick={uploadFb}/> */}\n        </React.Fragment>\n    )\n}\nconst FileInput = styled.label`\n\ndisplay: flex;\nheight: 27px;\nwidth: 100%;\ngap: 10px;\nalign-items: center;\nmargin-top: 20px;\n\np:first-child{\n    flex:1;\n    height: 27px;\n    border-bottom: 1px solid #000 ;\n    margin: 0;\n}\np:last-child{\n    width: 100px;\n    height: 27px;\n    background:#ffde00;\n    border-radius:5px;\n    text-align: center;\n    line-height: 27px;\n}\n\n`\nexport default Upload;","/Users/seonashim/Sparta/react_middleage/image-community/src/components/Header.js",["146","147"],"import React from \"react\";\nimport { Grid, Text, Button } from \"../elements\";\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key)? true : false;\n  \n  console.log(is_session);\n\n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid is_flex padding=\"4px 16px\">\n          <Grid>\n            <Text margin=\"0px\" size=\"24px\" bold>\n              헬로\n            </Text>\n          </Grid>\n\n          <Grid is_flex gap=\"10px\">\n            <Button text=\"내정보\"></Button>\n            <Button text=\"알림\" _onClick={()=>{history.push('/noti')}}></Button>\n            <Button\n              text=\"로그아웃\"\n              _onClick={() => {\n                dispatch(userActions.logoutFB());\n              }}\n            ></Button>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid is_flex padding=\"4px 16px\">\n        <Grid>\n          <Text margin=\"0px\" size=\"24px\" bold>\n            헬로\n          </Text>\n        </Grid>\n\n        <Grid is_flex>\n          <Button\n            text=\"로그인\"\n            _onClick={() => {\n              history.push(\"/login\");\n            }}\n          ></Button>\n          <Button\n            text=\"회원가입\"\n            _onClick={() => {\n              history.push(\"/signup\");\n            }}\n          ></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","/Users/seonashim/Sparta/react_middleage/image-community/src/redux/configureStore.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/redux/modules/post.js",["148"],"/Users/seonashim/Sparta/react_middleage/image-community/src/redux/modules/image.js",[],"/Users/seonashim/Sparta/react_middleage/image-community/src/shared/Search.js",["149","150"],"//Lodash, Debounce, throttle 사용예시\n\nimport React from \"react\";\nimport _ from \"lodash\";\n\nconst Search = () => {\n\n    const [text, setText] = React.useState(\"\");\n\n    //마지막의 1초후 실행\n    const debounce = _.debounce((e)=>{\n        console.log(\"debounce :::\",e.target.value);\n    }, 1000)\n    \n    //1초마다 실행\n    const throttle = _.throttle((e)=>{\n        console.log(\"throttle:::\",e.target.value);\n    },1000)\n\n    const keyPressDebounce = React.useCallback(debounce,[]);\n    const keyPressThrottle = React.useCallback(throttle,[]);\n\n    const onChange = (e) => {\n        // console.log(e.target.value);\n        setText(e.target.value);\n        keyPressDebounce(e);\n        keyPressThrottle(e);\n    }\n\n    \n\n    return (\n    <div>\n        <input type=\"text\" onChange={onChange} value={text}/>\n    </div>\n    )\n}\n\nexport default Search;","/Users/seonashim/Sparta/react_middleage/image-community/src/pages/Notifications.js",["151","152","153","154","155"],"\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Cards from \"../components/Card\";\n\nimport { Grid, Image, Text } from \"../elements\";\n\nimport {apiKey} from \"../shared/firebase\";\n\nconst Notifications = (props) => {\n\n    // const is_login = useSelector((state) => state.user.is_login);\n    // const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n    // const is_session = sessionStorage.getItem(_session_key)\n    //     ? true\n    //     : false;\n\n    let noti = [\n        {user_name:\"aaa\", post_id:\"post1\", image_url:\"\",},\n        {user_name:\"aaa\", post_id:\"post2\", image_url:\"\",},\n        {user_name:\"aaa\", post_id:\"post3\", image_url:\"\",},\n        {user_name:\"aaa\", post_id:\"post4\", image_url:\"\",},\n        {user_name:\"aaa\", post_id:\"post5\", image_url:\"\",}\n    ];\n    \n\n        return (\n            <React.Fragment>\n                <Grid padding=\"16px\"  >\n                    {//n은 props    인듯?\n                        noti.map((n)=>{\n                            return (\n                                <Cards {...n} key={n.post_id}/>\n                            )\n                        })\n                    }\n                \n                </Grid>\n            </React.Fragment>\n        )\n\n    \n\n    return (<div>\n        로그인을 해주세요!\n    </div>)\n\n}\n\nexport default Notifications;","/Users/seonashim/Sparta/react_middleage/image-community/src/components/Card.js",["156"],"import React from \"react\";\nimport {Grid, Image, Text} from \"../elements\";\n\nconst Cards = (props) => {\n\n    const {image_url, user_name, post_id} = props;\n\n    return (\n        <React.Fragment>\n            <Grid padding=\"16px\" is_flex=\"is_flex\" margin=\"8px 0\" bg=\"#eff6ff\">\n                <Grid width=\"85px\" height=\"85px\" margin=\"0 8px 0 0\" is_flex=\"is_flex\">\n                    <Image src={image_url} size={85} shape=\"square\"/>\n                </Grid>\n                <Grid>\n                    <Text>\n                        <span\n                            style={{\n                                fontWeight: 700\n                            }}>{user_name}</span>\n                        님이 게시글에 댓글을 남겼습니다!</Text>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nCards.defaultProps = {\n    image_url:\"http://health.chosun.com/site/data/img_dir/2020/05/07/2020050702573_0.jpg\",\n    user_name:\"aa\",\n    post_id:\"\"\n}\n\nexport default Cards;",{"ruleId":"157","severity":1,"message":"158","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":21},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":21,"column":7,"nodeType":"167","endLine":21,"endColumn":9,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":36,"column":6,"nodeType":"167","endLine":36,"endColumn":8,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"171","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"172","line":3,"column":21,"nodeType":"159","messageId":"160","endLine":3,"endColumn":30},{"ruleId":"157","severity":1,"message":"173","line":3,"column":32,"nodeType":"159","messageId":"160","endLine":3,"endColumn":44},{"ruleId":"157","severity":1,"message":"171","line":4,"column":21,"nodeType":"159","messageId":"160","endLine":4,"endColumn":30},{"ruleId":"157","severity":1,"message":"174","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"175","line":59,"column":7,"nodeType":"167","endLine":59,"endColumn":9,"suggestions":"176"},{"ruleId":"157","severity":1,"message":"177","line":24,"column":12,"nodeType":"159","messageId":"160","endLine":24,"endColumn":24},{"ruleId":"157","severity":1,"message":"178","line":24,"column":37,"nodeType":"159","messageId":"160","endLine":24,"endColumn":44},{"ruleId":"157","severity":1,"message":"179","line":24,"column":46,"nodeType":"159","messageId":"160","endLine":24,"endColumn":53},{"ruleId":"157","severity":1,"message":"180","line":4,"column":17,"nodeType":"159","messageId":"160","endLine":4,"endColumn":23},{"ruleId":"157","severity":1,"message":"181","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":17},{"ruleId":"157","severity":1,"message":"182","line":28,"column":11,"nodeType":"159","messageId":"160","endLine":28,"endColumn":19},{"ruleId":"157","severity":1,"message":"171","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"173","line":3,"column":21,"nodeType":"159","messageId":"160","endLine":3,"endColumn":33},{"ruleId":"183","severity":1,"message":"184","line":156,"column":9,"nodeType":"185","messageId":"186","endLine":197,"endColumn":16},{"ruleId":"165","severity":1,"message":"187","line":20,"column":30,"nodeType":"188","endLine":20,"endColumn":47,"suggestions":"189"},{"ruleId":"165","severity":1,"message":"190","line":21,"column":30,"nodeType":"188","endLine":21,"endColumn":47,"suggestions":"191"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":20},{"ruleId":"157","severity":1,"message":"192","line":6,"column":16,"nodeType":"159","messageId":"160","endLine":6,"endColumn":21},{"ruleId":"157","severity":1,"message":"193","line":6,"column":23,"nodeType":"159","messageId":"160","endLine":6,"endColumn":27},{"ruleId":"157","severity":1,"message":"194","line":8,"column":9,"nodeType":"159","messageId":"160","endLine":8,"endColumn":15},{"ruleId":"183","severity":1,"message":"184","line":44,"column":5,"nodeType":"195","messageId":"186","endLine":46,"endColumn":12},{"ruleId":"157","severity":1,"message":"179","line":6,"column":34,"nodeType":"159","messageId":"160","endLine":6,"endColumn":41},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'post_list.length'. Either include them or remove the dependency array.","ArrayExpression",["198"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'is_session'. Either include them or remove the dependency array.",["199"],"'getCookie' is defined but never used.","'setCookie' is defined but never used.","'deleteCookie' is defined but never used.","'useState' is defined but never used.","React Hook React.useEffect has missing dependencies: '_post', 'dispatch', 'history', and 'is_edit'. Either include them or remove the dependency array.",["200"],"'user_profile' is assigned a value but never used.","'user_id' is assigned a value but never used.","'post_id' is assigned a value but never used.","'Button' is defined but never used.","'storage' is defined but never used.","'uploadFb' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useCallback has a missing dependency: 'debounce'. Either include it or remove the dependency array.","MemberExpression",["201"],"React Hook useCallback has a missing dependency: 'throttle'. Either include it or remove the dependency array.",["202"],"'Image' is defined but never used.","'Text' is defined but never used.","'apiKey' is defined but never used.","ReturnStatement","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [dispatch, post_list.length]",{"range":"213","text":"214"},"Update the dependencies array to be: [dispatch, is_session]",{"range":"215","text":"216"},"Update the dependencies array to be: [_post, dispatch, history, is_edit]",{"range":"217","text":"218"},"Update the dependencies array to be: [debounce]",{"range":"219","text":"220"},"Update the dependencies array to be: [throttle]",{"range":"221","text":"222"},[638,640],"[dispatch, post_list.length]",[1057,1059],"[dispatch, is_session]",[1550,1552],"[_post, dispatch, history, is_edit]",[460,462],"[debounce]",[521,523],"[throttle]"]